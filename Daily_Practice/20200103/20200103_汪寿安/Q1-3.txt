
[C++语法规则很多，要落实下来，得通过多敲代码来理解，
 看N遍不如写一次；在写代码的过程中，会碰到其它你不曾碰到过的
 编译问题，切记程序是调试出来的；再就是通过练习，把敲代码的
 速度提升上来，熟悉键盘，培养写代码的感觉]

1. C++内存布局分为几个区域，各自具备什么特点？
    五大区域
    从上到下，或从高到低：
    内核区：程序内核，一般占据一个G
    栈区：栈空间，系统自动回收
    堆区：堆空间，需要手动回收，如果程序全部结束，系统也会回收，但是程序运行期间不回收会造成内存泄漏
    读写区
    只读区（其中读写区和只读区这一部分，又可以分为全局静态区、文字常量区、程序代码区 ）
    （全局静态区：静态常量，生命周期长于函数周期，一般在函数外定义，main函数刚开始执行就会引入静态函数）
    （文字常量区：存放文字常量，不允许修改）
    （程序代码区：程序的代码段，可认为既有只读段，也有读写段）

2. 当定义类时，编译器会为类自动生成哪些函数？
   这些函数各自都有什么特点？
    （1）默认构造函数：与类名相同，可以不传参，系统默认构建这样的基础函数；如果涉及堆空间的开辟，就不能使用系统的默认构造函数；
    （2）默认析构函数：自动释放函数。函数结束时，一定会调用析构函数；调用析构函数不一定可以结束函数。涉及堆空间，需要显式构建
    （3）默认复制构造：自动复制，Point（const Point & rhs），const和&都不可缺少，涉及堆空间，避免double free，需要显式构造
    （4）默认赋值构造函数：自动赋值，可手动显式构造



3. 什么是浅拷贝, 什么是深拷贝?
    浅拷贝，只是指向同一块地址，释放的时候可能double free，造成内存泄漏
    深拷贝，开辟内存空间，将内容分存在不同的两个空间内，避免了double free的问题


4. 实现一个自定义的String类，保证main函数对正确执行
class String
{
public:
	String();
	String(const char *pstr);
	String(const String & rhs);
	String & operator=(const String & rhs);
	~String();

	void print();

private:
	char * _pstr;
};

int main(void)
{
	String str1;
	str1.print();
	
	String str2 = "Hello,world";
	String str3("wangdao");
	
	str2.print();		
	str3.print();	
	
	String str4 = str3;
	str4.print();
	
	str4 = str2;
	str4.print();
	
	return 0;
}
